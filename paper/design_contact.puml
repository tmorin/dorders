@startuml design_contact_eventstorming_add
!include common.eventstorming.puml
package contact {
  Command('AddContact')
  Aggregate('Contact')
  Event('ContactCreated')
}
AddContact -r-> Contact : creates
AddContact --> ContactCreated : publishes
ContactCreated -u-> Contact : applied on
@enduml

@startuml design_contact_eventstorming_rename
!include common.eventstorming.puml
package contact {
  Command('RenameContact')
  Aggregate('Contact')
  Event('ContactRenamed')
}
RenameContact -r-> Contact : loads
RenameContact --> ContactRenamed : publishes
ContactRenamed -u-> Contact : applied on
@enduml

@startuml design_contact_eventstorming_remove
!include common.eventstorming.puml
package contact {
  Command('RemoveContact')
  Aggregate('Contact')
  Event('ContactDeleted')
}
RemoveContact -r-> Contact : deletes
RemoveContact --> ContactDeleted : publishes
ContactDeleted -u-> Contact : applied on
@enduml

@startuml design_contact_eventstorming_contacts_loader
!include common.eventstorming.puml
package profile {
  Event('ProfileCreated')
}
package contact {
  Process('ContactsLoader')
  Aggregate('Contact')
  Event('ContactCreated')
  Event('ContactsLoaded')
}
ProfileCreated --> ContactsLoader : triggers
ContactsLoader -r-> Contact : creates
ContactsLoader --> ContactCreated : publishes
ContactCreated -u-> Contact : applied to
ContactsLoader --> ContactsLoaded : publishes
@enduml

@startuml design_contact_eventstorming_contact_synchronizer
!include common.eventstorming.puml
package contact {
  Process('ContactSynchronizer')
  Service('ContactSynchronizationService')
  Event('ContactCreated')
  Event('ContactSynchronized')
  Aggregate('Contact')
}
ContactCreated --> ContactSynchronizer : triggers
ContactSynchronizer -r-> ContactSynchronizationService : monitor the ongoing synchronization
ContactSynchronizationService --> ContactSynchronized : publishes
ContactSynchronizationService --> Contact : loads
ContactSynchronized -r-> Contact : applied on
@enduml

@startuml design_contact_eventstorming_contacts_synchronizer
!include common.eventstorming.puml
package profile {
  Event('ProfileSynchronized')
}
package contact {
  Process('ContactsSynchronizer')
  Service('ContactSynchronizationService')
  Event('ContactDeleted')
  Event('ContactCreated')
  Event('ContactsSynchronized')
  Aggregate('Contact')
}
ProfileSynchronized --> ContactsSynchronizer : triggers
ContactsSynchronizer -r-> ContactSynchronizationService : check ongoing synchronizations
ContactSynchronizationService --> ContactCreated : publishes
ContactSynchronizationService --> ContactDeleted : publishes
ContactsSynchronizer --> ContactsSynchronized : publishes
ContactSynchronizationService --> Contact : creates or deletes
ContactCreated -r-> Contact : applied on
ContactDeleted -l-> Contact : applied on

@enduml

@startuml design_contact_eventstorming_contacts_clearer
!include common.eventstorming.puml
package profile {
  Event('ProfileDeleted')
}
package contact {
  Process('ContactsClearer')
  Aggregate('Contact')
  Event('ContactDeleted')
  Event('ContactsDeleted')
}
ProfileDeleted --> ContactsClearer : triggers
ContactsClearer -r-> Contact : deletes
ContactDeleted -u-> Contact : applied on
ContactsClearer --> ContactDeleted : publishes
ContactsClearer --> ContactsDeleted : publishes
@enduml
