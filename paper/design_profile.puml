@startuml design_profile_eventstorming_create
!include common.eventstorming.puml
package profile {
  Command('CreateProfile')
  DomainEvent('ProfileCreated')
  DomainEvent('ProfileCardUpdated')
  Aggregate('Profile')
  Result('ProfileId')
}
CreateProfile --> ProfileCreated : generates
CreateProfile --> ProfileCardUpdated : generates
CreateProfile --> ProfileId : returns
CreateProfile --> Profile : creates
ProfileCreated -u-> Profile : applied on
ProfileCardUpdated -u-> Profile : applied on
@enduml

@startuml design_profile_eventstorming_import
!include common.eventstorming.puml
package profile {
  Command('ImportProfile')
  DomainEvent('ProfileCreated')
  Aggregate('Profile')
  Result('ProfileId')
  Service('ProfileReferenceDeserializer')
}
ImportProfile --> ProfileCreated : generates
ImportProfile --> Profile : creates
ImportProfile -r-> ProfileId : returns
ImportProfile -l-> ProfileReferenceDeserializer : deserializes the reference
ProfileCreated -r-> Profile : applied on
@enduml

@startuml design_profile_eventstorming_update_profile_card
!include common.eventstorming.puml
package profile {
  Command('UpdateProfileCard')
  DomainEvent('ProfileCardUpdated')
  Aggregate('Profile')
}
UpdateProfileCard --> ProfileCardUpdated : generates
UpdateProfileCard --> Profile : get
ProfileCardUpdated -r-> Profile : applied on
@enduml

@startuml design_profile_eventstorming_delete
!include common.eventstorming.puml
package profile {
  Command('DeleteProfile')
  DomainEvent('ProfileDeleted')
  Aggregate('Profile')
}
DeleteProfile --> ProfileDeleted : generates
DeleteProfile --> Profile : deletes
ProfileDeleted -r-> Profile : applied on
@enduml

@startuml design_profile_eventstorming_get_serialized_reference
!include common.eventstorming.puml
package profile {
  Query('GetSerializedProfileReference')
  Aggregate('Profile')
  Service('ProfileReferenceSerializer')
  Result('SerializedProfileReference')
}
GetSerializedProfileReference --> Profile : get
GetSerializedProfileReference --> ProfileReferenceSerializer : serializes the reference
GetSerializedProfileReference -r-> SerializedProfileReference : returns
@enduml

@startuml design_profile_eventstorming_load_profiles
!include common.eventstorming.puml
package peer {
  DomainEvent('LocalPeerStarted')
}
package profile {
  Process('ProfilesLoader')
  DomainEvent('ProfileCreated')
  IntegrationEvent('ProfilesLoaded') 
  Aggregate('Profile')
}
LocalPeerStarted --> ProfilesLoader : triggers
ProfilesLoader -r-> Profile : creates
ProfileCreated -u-> Profile : applied on
ProfilesLoader --> ProfileCreated : generates
ProfilesLoader --> ProfilesLoaded : generates
@enduml

@startuml design_profile_eventstorming_synchronize_profiles_manage
!include common.eventstorming.puml
package profile {
  DomainEvent('ProfileCreated')
  DomainEvent('ProfileSynchronized')
  Service('ProfileSynchronizerService')
  Aggregate('Profile')
  Process('ProfileSynchronizer')
}

ProfileCreated -d-> ProfileSynchronizer : triggers
ProfileSynchronizer --> Profile : get
ProfileSynchronizer -r-> ProfileSynchronizerService : manages the ongoing synchronization
ProfileSynchronizer --> ProfileSynchronized : generates
ProfileSynchronized -l-> Profile : applied on
@enduml

@startuml design_profile_eventstorming_synchronize_profiles_stop
!include common.eventstorming.puml
package peer {
  DomainEvent('LocalPeerStopped')
}
package profile {
  Process('ProfileSynchronizer')
  Service('ProfileSynchronizerService')
  IntegrationEvent('ProfilesSynchronizationStopped')
}

LocalPeerStopped -d-> ProfileSynchronizer : triggers
ProfileSynchronizer -r-> ProfileSynchronizerService : stops the ongoing synchronizations
ProfileSynchronizer --> ProfilesSynchronizationStopped : generates
@enduml
